scalar DateTime

type Contract {
  id: ID!
  businessNo: String!
  customerName: String!
  billNo: String
  salesman: String
  amount: Float!
  currency: String!
  status: ContractStatus!
  contractDate: DateTime
  deliveryDate: DateTime
  description: String
  receivables: [Receivable!]!
  payables: [Payable!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Receivable {
  id: ID!
  contract: Contract!
  customerName: String!
  amount: Float!
  currency: String!
  dueDate: DateTime
  status: ReceivableStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Payable {
  id: ID!
  contract: Contract!
  supplierName: String!
  amount: Float!
  currency: String!
  dueDate: DateTime
  status: PayableStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: ID!
  username: String!
  email: String!
  role: Role!
  status: UserStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ContractStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}

enum ReceivableStatus {
  PENDING
  PARTIAL
  COMPLETED
  OVERDUE
}

enum PayableStatus {
  PENDING
  PARTIAL
  COMPLETED
  OVERDUE
}

enum Role {
  ADMIN
  MANAGER
  FINANCE
  USER
}

enum UserStatus {
  ENABLED
  DISABLED
}

type Query {
  # Contract queries
  contracts: [Contract!]!
  contract(id: ID!): Contract
  contractsByStatus(status: ContractStatus!): [Contract!]!
  
  # Receivable queries
  receivables: [Receivable!]!
  receivable(id: ID!): Receivable
  receivablesByContract(contractId: ID!): [Receivable!]!
  
  # Payable queries
  payables: [Payable!]!
  payable(id: ID!): Payable
  payablesByContract(contractId: ID!): [Payable!]!
  
  # User queries
  users: [User!]!
  user(id: ID!): User
  userByUsername(username: String!): User
}

type Mutation {
  # Contract mutations
  createContract(
    businessNo: String!
    customerName: String!
    billNo: String
    salesman: String
    amount: Float!
    currency: String!
    status: ContractStatus!
    contractDate: DateTime
    deliveryDate: DateTime
    description: String
  ): Contract!
  
  updateContract(
    id: ID!
    businessNo: String
    customerName: String
    billNo: String
    salesman: String
    amount: Float
    currency: String
    status: ContractStatus
    contractDate: DateTime
    deliveryDate: DateTime
    description: String
  ): Contract!
  
  deleteContract(id: ID!): Boolean!
  
  # Receivable mutations
  createReceivable(
    contractId: ID!
    customerName: String!
    amount: Float!
    currency: String!
    dueDate: DateTime
    status: ReceivableStatus!
  ): Receivable!
  
  updateReceivable(
    id: ID!
    customerName: String
    amount: Float
    currency: String
    dueDate: DateTime
    status: ReceivableStatus
  ): Receivable!
  
  deleteReceivable(id: ID!): Boolean!
  
  # Payable mutations
  createPayable(
    contractId: ID!
    supplierName: String!
    amount: Float!
    currency: String!
    dueDate: DateTime
    status: PayableStatus!
  ): Payable!
  
  updatePayable(
    id: ID!
    supplierName: String
    amount: Float
    currency: String
    dueDate: DateTime
    status: PayableStatus
  ): Payable!
  
  deletePayable(id: ID!): Boolean!
  
  # User mutations
  createUser(
    username: String!
    email: String!
    password: String!
    role: Role!
    status: UserStatus!
  ): User!
  
  updateUser(
    id: ID!
    username: String
    email: String
    password: String
    role: Role
    status: UserStatus
  ): User!
  
  deleteUser(id: ID!): Boolean!
}